name: Gateway CI/CD

on:
  push:
    paths:
      - 'gateway/**'
      - '.github/workflows/gateway.yml'
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        java-version: '19'
        distribution: 'corretto'
    - name: Build with Gradle
      run: ./gradlew gateway:build
    - name: Cache build folder
      uses: actions/cache@v3
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle.kts') }}
        restore-keys: |
            ${{ runner.os }}-gradle-
    - name: Run Snyk to check for vulnerabilities
      run: ./gradlew gateway:snyk-test
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Finish
        run: echo "Finish testing"
        shell: bash
    
  publish:
    needs: [build, test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Use cache
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: ./gateway
          file: ./gateway/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/frankensound:latest
  snyk:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Build a Docker image
      run: docker build -t ./gateway/Dockerfile .
    - name: Run Snyk to check Docker image for vulnerabilities
      continue-on-error: true
      uses: snyk/actions/docker@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        image: ${{ secrets.DOCKER_USERNAME }}/frankensound:latest
        args: --file=./gateway/Dockerfile
              --severity-threshold=high
              --run-quality-checks=true  
    - name: Upload result to GitHub Code Scanning
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: snyk.sarif
        
  deploy:
    needs: [test, publish]
    runs-on: ubuntu-latest
    steps:
      - name: Finish
        run: echo "Finish deploying"
        shell: bash
